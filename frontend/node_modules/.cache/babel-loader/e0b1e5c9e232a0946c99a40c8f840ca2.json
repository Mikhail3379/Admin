{"ast":null,"code":"import axios from \"axios\";\nimport { getQAByID } from \"./endpoints\";\nexport const getQAById = id => {\n  axios.get(`${getQAByID}?id=${id}`).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const updateQA = (id, question, answer) => {\n  axios.put(`${updateUser}?id=${id}`, {\n    question,\n    answer\n  }).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const getALLQA = () => {\n  axios.get(`${getALLQA}`).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log({\n      error\n    });\n  }).then(function () {// always executed\n  });\n};\nexport const addQA = (id, question, answer) => {\n  axios.post(`${addQA}?id=${id}`, {\n    question,\n    answer\n  }).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const deleteQA = id => {\n  axios.delete(`${deleteQA}?id=${id}`).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const getUserByID = id => {\n  axios.get(`${getUserByID}?id=${id}`).then(function (response) {\n    // handle success\n    console.log({\n      Users: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const updateUser = (id, public_key) => {\n  axios.put(`${updateUser}?id=${id}`, {\n    public_key\n  }).then(function (response) {\n    // handle success\n    console.log({\n      Users: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const getALLUSERS = () => {\n  axios.get(`${getALLUSERS}`).then(function (response) {\n    // handle success\n    console.log({\n      Users: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log({\n      error\n    });\n  }).then(function () {// always executed\n  });\n};\nexport const addUser = (id, public_key) => {\n  axios.post(`${addUser}?id=${id}`, {\n    public_key\n  }).then(function (response) {\n    // handle success\n    console.log({\n      Users: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const deleteUser = id => {\n  axios.delete(`${deleteUser}?id=${id}`).then(function (response) {\n    // handle success\n    console.log({\n      Users: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};","map":{"version":3,"sources":["/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/lib/axios.ts"],"names":["axios","getQAByID","getQAById","id","get","then","response","console","log","QA","data","catch","error","updateQA","question","answer","put","updateUser","getALLQA","addQA","post","deleteQA","delete","getUserByID","Users","public_key","getALLUSERS","addUser","deleteUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,SAAS,GAAIC,EAAD,IAAa;AACpCH,EAAAA,KAAK,CACFI,GADH,CACQ,GAAEH,SAAU,OAAME,EAAG,EAD7B,EAEGE,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,MAAAA,EAAE,EAAEH,QAAQ,CAACI;AAAf,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,GAVH,EAWGP,IAXH,CAWQ,YAAY,CAChB;AACD,GAbH;AAcD,CAfM;AAiBP,OAAO,MAAMQ,QAAQ,GAAG,CAACV,EAAD,EAAUW,QAAV,EAAyBC,MAAzB,KAAyC;AAC7Df,EAAAA,KAAK,CACFgB,GADH,CACQ,GAAEC,UAAW,OAAMd,EAAG,EAD9B,EACiC;AAC3BW,IAAAA,QAD2B;AAE3BC,IAAAA;AAF2B,GADjC,EAKGV,IALH,CAKQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,MAAAA,EAAE,EAAEH,QAAQ,CAACI;AAAf,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GATH,EAUGC,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,GAbH,EAcGP,IAdH,CAcQ,YAAY,CAChB;AACD,GAhBH;AAiBD,CAlBI;AAoBL,OAAO,MAAMa,QAAQ,GAAG,MAAM;AAC5BlB,EAAAA,KAAK,CACFI,GADH,CACQ,GAAEc,QAAS,EADnB,EAEGb,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,MAAAA,EAAE,EAAEH,QAAQ,CAACI;AAAf,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACI,MAAAA;AAAD,KAAZ;AACD,GAVH,EAWGP,IAXH,CAWQ,YAAY,CAChB;AACD,GAbH;AAcD,CAfM;AAiBP,OAAO,MAAMc,KAAK,GAAG,CAAChB,EAAD,EAAUW,QAAV,EAAyBC,MAAzB,KAAyC;AAC5Df,EAAAA,KAAK,CACFoB,IADH,CACS,GAAED,KAAM,OAAMhB,EAAG,EAD1B,EAC6B;AACvBW,IAAAA,QADuB;AAEvBC,IAAAA;AAFuB,GAD7B,EAKGV,IALH,CAKQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,MAAAA,EAAE,EAAEH,QAAQ,CAACI;AAAf,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GATH,EAUGC,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,GAbH,EAcGP,IAdH,CAcQ,YAAY,CAChB;AACD,GAhBH;AAiBD,CAlBM;AAoBP,OAAO,MAAMgB,QAAQ,GAAIlB,EAAD,IAAa;AACnCH,EAAAA,KAAK,CACFsB,MADH,CACW,GAAED,QAAS,OAAMlB,EAAG,EAD/B,EAEGE,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,MAAAA,EAAE,EAAEH,QAAQ,CAACI;AAAf,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,GAVH,EAWGP,IAXH,CAWQ,YAAY,CAChB;AACD,GAbH;AAcD,CAfM;AAiBP,OAAO,MAAMkB,WAAW,GAAIpB,EAAD,IAAa;AACtCH,EAAAA,KAAK,CACFI,GADH,CACQ,GAAEmB,WAAY,OAAMpB,EAAG,EAD/B,EAEGE,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEgB,MAAAA,KAAK,EAAElB,QAAQ,CAACI;AAAlB,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,GAVH,EAWGP,IAXH,CAWQ,YAAY,CAChB;AACD,GAbH;AAcD,CAfM;AAiBP,OAAO,MAAMY,UAAU,GAAG,CAACd,EAAD,EAAUsB,UAAV,KAA8B;AACpDzB,EAAAA,KAAK,CACFgB,GADH,CACQ,GAAEC,UAAW,OAAMd,EAAG,EAD9B,EACiC;AAC3BsB,IAAAA;AAD2B,GADjC,EAIGpB,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEgB,MAAAA,KAAK,EAAElB,QAAQ,CAACI;AAAlB,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GARH,EASGC,KATH,CASS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,GAZH,EAaGP,IAbH,CAaQ,YAAY,CAChB;AACD,GAfH;AAgBD,CAjBI;AAmBL,OAAO,MAAMqB,WAAW,GAAG,MAAM;AAC/B1B,EAAAA,KAAK,CACFI,GADH,CACQ,GAAEsB,WAAY,EADtB,EAEGrB,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEgB,MAAAA,KAAK,EAAElB,QAAQ,CAACI;AAAlB,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACI,MAAAA;AAAD,KAAZ;AACD,GAVH,EAWGP,IAXH,CAWQ,YAAY,CAChB;AACD,GAbH;AAcD,CAfM;AAiBP,OAAO,MAAMsB,OAAO,GAAG,CAACxB,EAAD,EAAUsB,UAAV,KAA8B;AACnDzB,EAAAA,KAAK,CACFoB,IADH,CACS,GAAEO,OAAQ,OAAMxB,EAAG,EAD5B,EAC+B;AACzBsB,IAAAA;AADyB,GAD/B,EAIGpB,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEgB,MAAAA,KAAK,EAAElB,QAAQ,CAACI;AAAlB,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GARH,EASGC,KATH,CASS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,GAZH,EAaGP,IAbH,CAaQ,YAAY,CAChB;AACD,GAfH;AAgBD,CAjBM;AAmBP,OAAO,MAAMuB,UAAU,GAAIzB,EAAD,IAAa;AACrCH,EAAAA,KAAK,CACFsB,MADH,CACW,GAAEM,UAAW,OAAMzB,EAAG,EADjC,EAEGE,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEgB,MAAAA,KAAK,EAAElB,QAAQ,CAACI;AAAlB,KAAZ;AACA,WAAOJ,QAAQ,CAACI,IAAhB;AACD,GANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,GAVH,EAWGP,IAXH,CAWQ,YAAY,CAChB;AACD,GAbH;AAcD,CAfM","sourcesContent":["import axios from \"axios\";\nimport { getQAByID } from \"./endpoints\";\n\nexport const getQAById = (id: any) => {\n  axios\n    .get(`${getQAByID}?id=${id}`)\n    .then(function (response) {\n      // handle success\n      console.log({ QA: response.data });\n      return response.data;\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .then(function () {\n      // always executed\n    });\n};\n\nexport const updateQA = (id: any, question: any, answer: any) => {\n    axios\n      .put(`${updateUser}?id=${id}`, {\n          question,\n          answer\n      })\n      .then(function (response) {\n        // handle success\n        console.log({ QA: response.data });\n        return response.data;\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n  export const getALLQA = () => {\n    axios\n      .get(`${getALLQA}`)\n      .then(function (response) {\n        // handle success\n        console.log({ QA: response.data });\n        return response.data;\n      })\n      .catch(function (error) {\n        // handle error\n        console.log({error});\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n  export const addQA = (id: any, question: any, answer: any) => {\n    axios\n      .post(`${addQA}?id=${id}`, {\n          question,\n          answer\n      })\n      .then(function (response) {\n        // handle success\n        console.log({ QA: response.data });\n        return response.data;\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n  export const deleteQA = (id: any) => {\n    axios\n      .delete(`${deleteQA}?id=${id}`)\n      .then(function (response) {\n        // handle success\n        console.log({ QA: response.data });\n        return response.data;\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n  export const getUserByID = (id: any) => {\n    axios\n      .get(`${getUserByID}?id=${id}`)\n      .then(function (response) {\n        // handle success\n        console.log({ Users: response.data });\n        return response.data;\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n  \n  export const updateUser = (id: any, public_key: any) => {\n      axios\n        .put(`${updateUser}?id=${id}`, {\n            public_key,\n        })\n        .then(function (response) {\n          // handle success\n          console.log({ Users: response.data });\n          return response.data;\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n    };\n  \n    export const getALLUSERS = () => {\n      axios\n        .get(`${getALLUSERS}`)\n        .then(function (response) {\n          // handle success\n          console.log({ Users: response.data });\n          return response.data;\n        })\n        .catch(function (error) {\n          // handle error\n          console.log({error});\n        })\n        .then(function () {\n          // always executed\n        });\n    };\n  \n    export const addUser = (id: any, public_key: any) => {\n      axios\n        .post(`${addUser}?id=${id}`, {\n            public_key\n        })\n        .then(function (response) {\n          // handle success\n          console.log({ Users: response.data });\n          return response.data;\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n    };\n  \n    export const deleteUser = (id: any) => {\n      axios\n        .delete(`${deleteUser}?id=${id}`)\n        .then(function (response) {\n          // handle success\n          console.log({ Users: response.data });\n          return response.data;\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n    };"]},"metadata":{},"sourceType":"module"}
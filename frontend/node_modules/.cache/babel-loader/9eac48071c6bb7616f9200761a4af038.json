{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/EditQA/EditQA.tsx\";\nimport * as React from \"react\";\nimport axios from \"axios\";\nimport QA from \"../QAList/QAList\";\nimport { getQAByID, updateQA } from \"../../lib/endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class editQA extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdateQA = () => {\n      const {\n        question,\n        answer\n      } = this.state.queAnsData;\n      axios.put(`${updateQA}?id=${id}`, {\n        question,\n        answer\n      }).then(function (response) {\n        // handle success\n        console.log({\n          Users: response.data\n        });\n        return response.data;\n      });\n    };\n\n    this.handleQAChange = event => {\n      const value = event.target.value;\n      const user = { ...this.state.queAnsData\n      };\n      user.public_key = value;\n      this.setState({\n        queAnsData: QA\n      });\n    };\n\n    this.state = {\n      queAnsId: \"\",\n      queAnsData: {}\n    };\n  } // editUser = (id: any, public_key: any) => {\n  //   axios\n  //     .put(`${`http://localhost:9000/app/updateUser`}?id=${id}`, {\n  //       public_key,\n  //     })\n  //     .then(function(data) {\n  //       // handle success\n  //       console.log({ Users: data.data });\n  //       return data.data;\n  //     });\n  // };\n\n\n  componentDidMount() {\n    const userId = this.props.match.params.id;\n    this.setState({\n      queAnsId\n    });\n    axios.get(`${getQAByID}?id=${userId}`).then(response => {\n      this.setState({\n        queAnsData: response.data[0]\n      });\n    });\n  }\n\n  render() {\n    // const id = this.state.id;\n    const {\n      queAnsData\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      //\n      _jsxDEV(\"div\", {\n        className: \"container\",\n        children: [\" */\", /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Edit Chatbot Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: queAnsData.question // onChange={(e) => setId(e.target.value)}\n          ,\n          type: \"text\" // placeholder=\"Please enter user's ID\"\n          ,\n          className: \"input\",\n          onChange: this.handleUpdateQA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Edit Chatbot Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: queAnsData.answer // onChange={(e) => setPublic_key(e.target.value)}\n          ,\n          type: \"text\",\n          className: \"input\",\n          onChange: this.handleQAChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn1\" //@ts-ignore\n          ,\n          onClick: this.handleUpdateQA,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\neditQA.question = void 0;\neditQA.answer = void 0;","map":{"version":3,"sources":["/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/EditQA/EditQA.tsx"],"names":["React","axios","QA","getQAByID","updateQA","editQA","Component","constructor","props","handleUpdateQA","question","answer","state","queAnsData","put","id","then","response","console","log","Users","data","handleQAChange","event","value","target","user","public_key","setState","queAnsId","componentDidMount","userId","match","params","get","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport QA from \"../QAList/QAList\";\nimport {getQAByID , updateQA} from \"../../lib/endpoints\";\n\ninterface IState {\n  // id: any;\n  // public_key: any;\n  queAnsId: any;\n  queAnsData: any;\n}\n\nexport default class editQA extends React.Component<any, IState> {\n  static question: string | number | readonly string[] | undefined;\n  static answer: string | number | readonly string[] | undefined;\n  constructor(props: any) {\n    super(props);\n    this.state = { queAnsId: \"\", queAnsData: {} };\n  }\n  // editUser = (id: any, public_key: any) => {\n  //   axios\n  //     .put(`${`http://localhost:9000/app/updateUser`}?id=${id}`, {\n  //       public_key,\n  //     })\n  //     .then(function(data) {\n  //       // handle success\n  //       console.log({ Users: data.data });\n  //       return data.data;\n  //     });\n  // };\n\n  handleUpdateQA = () => {\n    const { question, answer} = this.state.queAnsData;\n    axios\n      .put(`${updateQA}?id=${id}`, {\n        question,\n        answer\n      })\n      .then(function(response) {\n        // handle success\n        console.log({ Users: response.data });\n        return response.data;\n      });\n  };\n  componentDidMount() {\n    const userId = this.props.match.params.id;\n    this.setState({ queAnsId });\n    axios.get(`${getQAByID}?id=${userId}`).then((response) => {\n      this.setState({ queAnsData: response.data[0] });\n    });\n  }\n  handleQAChange = (event: any) => {\n    const value = event.target.value;\n    const user = { ...this.state.queAnsData };\n    user.public_key = value;\n    this.setState({ queAnsData: QA });\n  };\n  public render() {\n    // const id = this.state.id;\n    const { queAnsData } = this.state;\n    return (\n      //\n      <div className=\"container\">\n        {/* <form onSubmit={submitForm}> */} */\n         <label className=\"label\">Edit Chatbot Question</label>\n        <br />\n\n        <input\n          value={queAnsData.question}\n          // onChange={(e) => setId(e.target.value)}\n          type=\"text\"\n          // placeholder=\"Please enter user's ID\"\n          className=\"input\"\n          onChange={this.handleUpdateQA}\n        />\n\n        <br />\n        <label className=\"label\">Edit Chatbot Answer</label>\n        <br />\n        <input\n          value={queAnsData.answer}\n          // onChange={(e) => setPublic_key(e.target.value)}\n\n          type=\"text\"\n          className=\"input\"\n          onChange={this.handleQAChange}\n        />\n\n        <br />\n        <button\n          type=\"submit\"\n          className=\"btn1\"\n          //@ts-ignore\n          onClick={this.handleUpdateQA}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/EditQA/EditQA.tsx\";\nimport * as React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditQA extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      QA: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:9000/app/allQA`).then(data => {\n      this.setState({\n        QA: data.data\n      });\n    });\n  }\n\n  editQA(id, question, answer) {\n    axios.put(`${`http://localhost:9000/app/updateQA`}?id=${id}`, {\n      question,\n      answer\n    }).then(function (data) {\n      // handle success\n      console.log({\n        QA: data.data\n      });\n      return data.data;\n    });\n  }\n\n  render() {\n    const QA = this.state.QA;\n    return (\n      /*#__PURE__*/\n      // <div>\n      //   {QA.length === 0 && (\n      //     <div className=\"text-center\">\n      //       <h2>No data found at the moment</h2>\n      //     </div>\n      //         )}\n      //         <div className=\"container\">\n      //           <div className=\"row\">\n      //             <table className=\"table table-bordered\">\n      //               <thead className=\"thead-light\">\n      // <tr>\n      //   <th scope=\"col\">Chatbot Question</th>\n      //   <th scope=\"col\">Chatbot Answer</th>\n      // </tr>\n      //               </thead>\n      //               <tbody>\n      //                 {QA &&\n      //                   QA.map((QA) => (\n      //                     //  key={QA.id}\n      //                       <input\n      //                       value={QA.question}/>\n      //                       <input\n      //                       value={QA.answer}/>\n      //                       // <td>\n      //                       //   <div className=\"d-flex justify-content-between align-items-center\">\n      //                       //     <div\n      //                       //       className=\"btn-group\"\n      //                       //       style={{ marginBottom: \"20px\" }}\n      //                             </table>\n      //                             <button\n      //                               className=\"btn btn-sm btn-outline-secondary\"\n      //                                //@ts-ignore\n      //                               onClick={this.editQA}>\n      //                               Edit QA\n      //                             </button>\n      //                           </div>\n      //                         </div>\n      //                   ))}\n      //               </tbody>\n      //             {/* </table> */}\n      //           </div>\n      //         </div>\n      //       </div>\n      //     );\n      //   }\n      // }\n      //   {QA.length === 0 && (\n      //     <div className=\"text-center\">\n      //       <h2>No data found at the moment</h2>\n      //     </div>\n      // )}\n      _jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Edit Chatbot Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: QA.question // onChange={(e) => setId(e.target.value)}\n          ,\n          type: \"text\" // placeholder=\"Please enter user's ID\"\n          ,\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), \"console.log(QA.question)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Edit Chatbot Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: QA.answer // onChange={(e) => setPublic_key(e.target.value)}\n          ,\n          type: \"text\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), \"console.log(QA.answer)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn1\" //@ts-ignore\n          ,\n          onClick: this.editQA,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 1\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/EditQA/EditQA.tsx"],"names":["React","axios","EditQA","Component","constructor","props","state","QA","componentDidMount","get","then","data","setState","editQA","id","question","answer","put","console","log","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAQA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAkD;AAC/DC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAb;AACD;;AACMC,EAAAA,iBAAiB,GAAS;AAE/BP,IAAAA,KAAK,CAACQ,GAAN,CAAW,iCAAX,EAA6CC,IAA7C,CAAmDC,IAAD,IAAU;AAC1D,WAAKC,QAAL,CAAc;AAAEL,QAAAA,EAAE,EAAEI,IAAI,CAACA;AAAX,OAAd;AACD,KAFD;AAGD;;AACME,EAAAA,MAAM,CAACC,EAAD,EAAUC,QAAV,EAAwBC,MAAxB,EAAqC;AAChDf,IAAAA,KAAK,CAACgB,GAAN,CAAW,GAAG,oCAAoC,OAAMH,EAAG,EAA3D,EAA8D;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAA9D,EAAkFN,IAAlF,CAAuF,UAAUC,IAAV,EAAgB;AACrG;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEZ,QAAAA,EAAE,EAAEI,IAAI,CAACA;AAAX,OAAZ;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAJD;AAMD;;AAKMS,EAAAA,MAAM,GAAG;AACd,UAAMb,EAAE,GAAG,KAAKD,KAAL,CAAWC,EAAtB;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACN;AACA;AACA;AACA;AACA;AACgB;AACA;AACA;AACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM;AACA;AACA;AACA;AACA;AAEN;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEQ;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,eAGQ;AAAA;AAAA;AAAA;AAAA,gBAHR,eAUQ;AACE,UAAA,KAAK,EAAEA,EAAE,CAACQ,QADZ,CAEE;AAFF;AAGE,UAAA,IAAI,EAAC,MAHP,CAIE;AAJF;AAKE,UAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,gBAVR,2CAkBQ;AAAA;AAAA;AAAA;AAAA,gBAlBR,eAmBQ;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBR,eAoBQ;AAAA;AAAA;AAAA;AAAA,gBApBR,eAqBQ;AACE,UAAA,KAAK,EAAER,EAAE,CAACS,MADZ,CAEE;AAFF;AAKE,UAAA,IAAI,EAAC,MALP;AAOE,UAAA,SAAS,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,gBArBR,yCA+BQ;AAAA;AAAA;AAAA;AAAA,gBA/BR,eAgCQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,MAAhC,CAEuB;AAFvB;AAGsB,UAAA,OAAO,EAAE,KAAKH,MAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCR;AAAA;AAAA;AAAA;AAAA;AAAA;AA1DI;AAoGD;;AA7H8D","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { queryAllByAltText } from \"@testing-library/react\";\n\n\ninterface IState {\n  QA: any;\n}\n\nexport default class EditQA extends React.Component<any, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { QA:[] };\n  }\n  public componentDidMount(): void {\n   \n    axios.get(`http://localhost:9000/app/allQA`).then((data) => {\n      this.setState({ QA: data.data });\n    });\n  }\n  public editQA(id: any, question:any, answer: any) {\n    axios.put(`${`http://localhost:9000/app/updateQA`}?id=${id}`, {question, answer}).then(function (data) {\n      // handle success\n      console.log({ QA: data.data });\n      return data.data;\n    })\n    \n  }\n\n\n\n\n  public render() {\n    const QA = this.state.QA;\n    return (\n      // <div>\n      //   {QA.length === 0 && (\n      //     <div className=\"text-center\">\n      //       <h2>No data found at the moment</h2>\n      //     </div>\n//         )}\n//         <div className=\"container\">\n//           <div className=\"row\">\n//             <table className=\"table table-bordered\">\n//               <thead className=\"thead-light\">\n                // <tr>\n                //   <th scope=\"col\">Chatbot Question</th>\n                //   <th scope=\"col\">Chatbot Answer</th>\n                // </tr>\n//               </thead>\n//               <tbody>\n//                 {QA &&\n//                   QA.map((QA) => (\n//                     //  key={QA.id}\n//                       <input\n//                       value={QA.question}/>\n//                       <input\n//                       value={QA.answer}/>\n\n//                       // <td>\n//                       //   <div className=\"d-flex justify-content-between align-items-center\">\n//                       //     <div\n//                       //       className=\"btn-group\"\n//                       //       style={{ marginBottom: \"20px\" }}\n                          \n//                             </table>\n//                             <button\n//                               className=\"btn btn-sm btn-outline-secondary\"\n//                                //@ts-ignore\n//                               onClick={this.editQA}>\n//                               Edit QA\n//                             </button>\n//                           </div>\n//                         </div>\n                      \n                    \n//                   ))}\n//               </tbody>\n//             {/* </table> */}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n      //   {QA.length === 0 && (\n      //     <div className=\"text-center\">\n      //       <h2>No data found at the moment</h2>\n      //     </div>\n      // )}\n\n<div className=\"container\">\n      {/* <form onSubmit={submitForm}> */}\n        <label className=\"label\">Edit Chatbot Question</label>\n        <br />\n        {/* {QA &&\n                  QA.map((QA) => (\n                   question={QA.id}\n                  \n                  //@ts-ignore\n                  )}   */}\n        <input\n          value={QA.question}\n          // onChange={(e) => setId(e.target.value)}\n          type=\"text\"\n          // placeholder=\"Please enter user's ID\"\n          className=\"input\"\n        />\n        console.log(QA.question)\n        <br />\n        <label className=\"label\">Edit Chatbot Answer</label>\n        <br />\n        <input\n          value={QA.answer}\n          // onChange={(e) => setPublic_key(e.target.value)}\n        \n          \n          type=\"text\"\n          \n          className=\"input\"\n        />\n        console.log(QA.answer)\n        <br />\n        <button type=\"submit\" className=\"btn1\"\n         \n                               //@ts-ignore\n                              onClick={this.editQA}>\n          Submit\n        </button>\n                  \n      </div>\n    )\n                  \n  }\n  }\n"]},"metadata":{},"sourceType":"module"}
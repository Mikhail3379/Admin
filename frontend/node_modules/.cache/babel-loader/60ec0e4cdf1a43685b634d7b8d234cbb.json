{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/Auth/EditUser/EditUser.tsx\";\nimport * as React from \"react\";\nimport axios from \"axios\";\nimport Users from \"../../Users/Users\"; // import { getQAById } from \"../../lib/axios\";\n// import { deleteUser } from \"../../lib/axios\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:9000/app/allUsers`).then(data => {\n      this.setState({\n        users: data.data\n      });\n    });\n  }\n\n  editUser(id, public_key) {\n    axios.put(`${`http://localhost:9000/app/updateUser`}?id=${id}`, {\n      public_key\n    }).then(function (data) {\n      // handle success\n      console.log({\n        Users: data.data\n      });\n      return data.data;\n    });\n  } //   const updateUser = (id: any, public_key: any) => {\n  //     axios\n  //       .put(`${updateUser}?id=${id}`, {\n  //           public_key,\n  //       })\n  //       .then(function (response) {\n  //         // handle success\n  //         console.log({ Users: response.data });\n  //         return response.data;\n  //       })\n  // function deleteUser(id: any) {\n  //   axios.delete(`${`http://localhost:9000/app/deleteUser`}?id=${id}`).then(function (data) {\n  //     // handle success\n  //     console.log({ Users: data.data });\n  //     return data.data;\n  //   })\n  // }\n  // then((data) => {\n  //   const index = this.state.users.findIndex((user) => user.id === id);\n  //   this.state.users.splice(index, 1);\n  // this.props.history.push(\"/\");\n  //   });\n  // }\n  // public deleteUser (id: any) {\n  //     console.log(\"id = \"+id);\n  //     axios\n  //       .delete(`${`http://localhost:9000/app/deleteUser`}?id=${id}`)\n  //       .then(function (response) {\n  //         // handle success\n  //         console.log({ users: response.data });\n\n\n  render() {\n    const users = this.state.users;\n    return (\n      /*#__PURE__*/\n      //       <div>\n      //         {users.length === 0 && (\n      //           <div className=\"text-center\">\n      //             <h2>No user found at the moment</h2>\n      //           </div>\n      //         )}\n      //         <div className=\"container\">\n      //           <div className=\"row\">\n      //             <table className=\"table table-bordered\">\n      //               <thead className=\"thead-light\">\n      //                 <tr>\n      //                   <th scope=\"col\">ID</th>\n      //                   <th scope=\"col\">Public key</th>\n      //                 </tr>\n      //               </thead>\n      //               <tbody>\n      //                 {users &&\n      //                   users.map((user) => (\n      //                     <tr key={user.id}>\n      //                       <td>{user.id}</td>\n      //                       <td>{user.public_key}</td>\n      //                       <td>\n      //                         <div className=\"d-flex justify-content-between align-items-center\">\n      //                           <div\n      //                             className=\"btn-group\"\n      //                             style={{ marginBottom: \"20px\" }}\n      //                           >\n      //                             {/* <Link\n      //                               to={`edit/${user.id}`}\n      //                               className=\"btn btn-sm btn-outline-secondary\"\n      //                             >\n      //                               Edit User{\" \"}\n      //                             </Link> */}\n      //                             <button\n      //                               className=\"btn btn-sm btn-outline-secondary\"\n      //                               // onClick={() => this.deleteUser(user.id)}\n      //                               //@ts-ignore\n      //                               onClick={this.editUser}>\n      //                               Edit User\n      //                             </button>\n      //                           </div>\n      //                         </div>\n      //                       </td>\n      //                     </tr>\n      //                   ))}\n      //               </tbody>\n      //             </table>\n      //           </div>\n      //         </div>\n      //       </div>\n      //     );\n      //   }\n      // }\n      _jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Edit User's ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: Users.id // onChange={(e) => setId(e.target.value)}\n          ,\n          type: \"text\" // placeholder=\"Please enter user's ID\"\n          ,\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), \"console.log(QA.question)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Edit User's public key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: QA.answer // onChange={(e) => setPublic_key(e.target.value)}\n          ,\n          type: \"text\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), \"console.log(QA.answer)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn1\" //@ts-ignore\n          ,\n          onClick: this.editQA,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 1\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/Auth/EditUser/EditUser.tsx"],"names":["React","axios","Users","EditUser","Component","constructor","props","state","users","componentDidMount","get","then","data","setState","editUser","id","public_key","put","console","log","render","QA","answer","editQA"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Users from \"../../Users/Users\";\n// import { getQAById } from \"../../lib/axios\";\n// import { deleteUser } from \"../../lib/axios\";\n\ninterface IState {\n  users: any[];\n}\n\nexport default class EditUser extends React.Component<any, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { users: [] };\n  }\n  public componentDidMount(): void {\n   \n    axios.get(`http://localhost:9000/app/allUsers`).then((data) => {\n      this.setState({ users: data.data });\n    });\n  }\n  public editUser(id: any, public_key: any) {\n    axios.put(`${`http://localhost:9000/app/updateUser`}?id=${id}`, {public_key}).then(function (data) {\n      // handle success\n      console.log({ Users: data.data });\n      return data.data;\n    })\n    \n  }\n\n//   const updateUser = (id: any, public_key: any) => {\n//     axios\n//       .put(`${updateUser}?id=${id}`, {\n//           public_key,\n//       })\n//       .then(function (response) {\n//         // handle success\n//         console.log({ Users: response.data });\n//         return response.data;\n//       })\n  // function deleteUser(id: any) {\n  //   axios.delete(`${`http://localhost:9000/app/deleteUser`}?id=${id}`).then(function (data) {\n  //     // handle success\n  //     console.log({ Users: data.data });\n  //     return data.data;\n  //   })\n    \n  // }\n    // then((data) => {\n    //   const index = this.state.users.findIndex((user) => user.id === id);\n    //   this.state.users.splice(index, 1);\n      // this.props.history.push(\"/\");\n  //   });\n  // }\n// public deleteUser (id: any) {\n//     console.log(\"id = \"+id);\n//     axios\n//       .delete(`${`http://localhost:9000/app/deleteUser`}?id=${id}`)\n//       .then(function (response) {\n//         // handle success\n//         console.log({ users: response.data });\n\n  public render() {\n    const users = this.state.users;\n    return (\n//       <div>\n//         {users.length === 0 && (\n//           <div className=\"text-center\">\n//             <h2>No user found at the moment</h2>\n//           </div>\n//         )}\n//         <div className=\"container\">\n//           <div className=\"row\">\n//             <table className=\"table table-bordered\">\n//               <thead className=\"thead-light\">\n//                 <tr>\n//                   <th scope=\"col\">ID</th>\n//                   <th scope=\"col\">Public key</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {users &&\n//                   users.map((user) => (\n//                     <tr key={user.id}>\n//                       <td>{user.id}</td>\n//                       <td>{user.public_key}</td>\n\n//                       <td>\n//                         <div className=\"d-flex justify-content-between align-items-center\">\n//                           <div\n//                             className=\"btn-group\"\n//                             style={{ marginBottom: \"20px\" }}\n//                           >\n//                             {/* <Link\n//                               to={`edit/${user.id}`}\n//                               className=\"btn btn-sm btn-outline-secondary\"\n//                             >\n//                               Edit User{\" \"}\n//                             </Link> */}\n//                             <button\n//                               className=\"btn btn-sm btn-outline-secondary\"\n//                               // onClick={() => this.deleteUser(user.id)}\n//                               //@ts-ignore\n//                               onClick={this.editUser}>\n//                               Edit User\n//                             </button>\n//                           </div>\n//                         </div>\n//                       </td>\n//                     </tr>\n//                   ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n<div className=\"container\">\n      {/* <form onSubmit={submitForm}> */}\n        <label className=\"label\">Edit User's ID</label>\n        <br />\n        {/* {QA &&\n                  QA.map((QA) => (\n                   question={QA.id}\n                  \n                  //@ts-ignore\n                  )}   */}\n        <input\n          value={Users.id}\n          // onChange={(e) => setId(e.target.value)}\n          type=\"text\"\n          // placeholder=\"Please enter user's ID\"\n          className=\"input\"\n        />\n        console.log(QA.question)\n        <br />\n        <label className=\"label\">Edit User's public key</label>\n        <br />\n        <input\n          value={QA.answer}\n          // onChange={(e) => setPublic_key(e.target.value)}\n        \n          \n          type=\"text\"\n          \n          className=\"input\"\n        />\n        console.log(QA.answer)\n        <br />\n        <button type=\"submit\" className=\"btn1\"\n         \n                               //@ts-ignore\n                              onClick={this.editQA}>\n          Submit\n        </button>\n                  \n      </div>\n    )\n                  \n  }\n  }\n"]},"metadata":{},"sourceType":"module"}
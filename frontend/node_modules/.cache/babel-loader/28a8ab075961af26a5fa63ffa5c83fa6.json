{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/Auth/EditUser/EditUser.tsx\";\nimport * as React from \"react\";\nimport axios from \"axios\";\nimport { getUserByID, updateUser } from \"../../../lib/endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class editUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdateUser = () => {\n      const {\n        id,\n        public_key\n      } = this.state.userData;\n      axios.put(`${updateUser}?id=${id}`, {\n        public_key\n      }).then(function (response) {\n        // handle success\n        console.log({\n          Users: response.data\n        });\n        return response.data;\n      });\n    };\n\n    this.handleIdChange = event => {\n      const value = event.target.value;\n      const user = { ...this.state.userData\n      };\n      user.id = value;\n      this.setState({\n        userData: user\n      });\n    };\n\n    this.state = {\n      userId: \"\",\n      userData: {}\n    };\n  } // editUser = (id: any, public_key: any) => {\n  //   axios\n  //     .put(`${`http://localhost:9000/app/updateUser`}?id=${id}`, {\n  //       public_key,\n  //     })\n  //     .then(function(data) {\n  //       // handle success\n  //       console.log({ Users: data.data });\n  //       return data.data;\n  //     });\n  // };\n\n\n  componentDidMount() {\n    const userId = this.props.match.params.id;\n    this.setState({\n      userId\n    });\n    axios.get(`${getUserByID}?id=${userId}`).then(response => {\n      this.setState({\n        userData: response.data[0]\n      });\n    });\n  }\n\n  render() {\n    // const id = this.state.id;\n    const {\n      userData\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      //\n      _jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Edit User's ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: userData.id // onChange={(e) => setId(e.target.value)}\n          ,\n          type: \"text\" // placeholder=\"Please enter user's ID\"\n          ,\n          className: \"input\",\n          onChange: this.handleIdChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Edit User's public key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: userData.public_key // onChange={(e) => setPublic_key(e.target.value)}\n          ,\n          type: \"text\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn1\" //@ts-ignore\n          ,\n          onClick: handleUpdateUser,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\neditUser.id = void 0;\neditUser.public_key = void 0;","map":{"version":3,"sources":["/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/Auth/EditUser/EditUser.tsx"],"names":["React","axios","getUserByID","updateUser","editUser","Component","constructor","props","handleUpdateUser","id","public_key","state","userData","put","then","response","console","log","Users","data","handleIdChange","event","value","target","user","setState","userId","componentDidMount","match","params","get","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Users from \"../../Users/Users\";\nimport { getUserByID, updateUser } from \"../../../lib/endpoints\";\n\ninterface IState {\n  // id: any;\n  // public_key: any;\n  userId: string;\n  userData: any;\n}\n\nexport default class editUser extends React.Component<any, IState> {\n  static id: string | number | readonly string[] | undefined;\n  static public_key: string | number | readonly string[] | undefined;\n  constructor(props: any) {\n    super(props);\n    this.state = { userId: \"\", userData: {} };\n  }\n  // editUser = (id: any, public_key: any) => {\n  //   axios\n  //     .put(`${`http://localhost:9000/app/updateUser`}?id=${id}`, {\n  //       public_key,\n  //     })\n  //     .then(function(data) {\n  //       // handle success\n  //       console.log({ Users: data.data });\n  //       return data.data;\n  //     });\n  // };\n\n  handleUpdateUser = () => {\n    const { id, public_key } = this.state.userData;\n    axios\n      .put(`${updateUser}?id=${id}`, {\n        public_key,\n      })\n      .then(function(response) {\n        // handle success\n        console.log({ Users: response.data });\n        return response.data;\n      });\n  };\n  componentDidMount() {\n    const userId = this.props.match.params.id;\n    this.setState({ userId });\n    axios.get(`${getUserByID}?id=${userId}`).then((response) => {\n      this.setState({ userData: response.data[0] });\n    });\n  }\n  handleIdChange = (event: any) => {\n    const value = event.target.value;\n    const user = { ...this.state.userData };\n    user.id = value;\n    this.setState({ userData: user });\n  };\n  public render() {\n    // const id = this.state.id;\n    const { userData } = this.state;\n    return (\n      //\n      <div className=\"container\">\n        {/* <form onSubmit={submitForm}> */}\n        <label className=\"label\">Edit User's ID</label>\n        <br />\n\n        <input\n          value={userData.id}\n          // onChange={(e) => setId(e.target.value)}\n          type=\"text\"\n          // placeholder=\"Please enter user's ID\"\n          className=\"input\"\n          onChange={this.handleIdChange}\n        />\n\n        <br />\n        <label className=\"label\">Edit User's public key</label>\n        <br />\n        <input\n          value={userData.public_key}\n          // onChange={(e) => setPublic_key(e.target.value)}\n\n          type=\"text\"\n          className=\"input\"\n        />\n\n        <br />\n        <button\n          type=\"submit\"\n          className=\"btn1\"\n          //@ts-ignore\n          onClick={handleUpdateUser}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
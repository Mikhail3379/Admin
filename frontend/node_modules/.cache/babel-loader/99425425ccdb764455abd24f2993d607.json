{"ast":null,"code":"import axios from \"axios\";\nimport { getQAByID } from \"./endpoints\";\nexport const getQAById = id => {\n  axios.get(`${getQAByID}?id=${id}`).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const updateQA = (id, question, answer) => {\n  axios.put(`${updateQA}?id=${id}`, {\n    question,\n    answer\n  }).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const getALLQA = () => {\n  axios.get(`${getALLQA}`).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log({\n      error\n    });\n  }).then(function () {// always executed\n  });\n};\nexport const addQA = (id, question, answer) => {\n  axios.post(`${addQA}?id=${id}`, {\n    question,\n    answer\n  }).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};\nexport const deleteQA = id => {\n  axios.delete(`${deleteQA}?id=${id}`).then(function (response) {\n    // handle success\n    console.log({\n      QA: response.data\n    });\n    return response.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n};","map":{"version":3,"sources":["/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/lib/axios.ts"],"names":["axios","getQAByID","getQAById","id","get","then","response","console","log","QA","data","catch","error","updateQA","question","answer","put","getALLQA","addQA","post","deleteQA","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { getQAByID } from \"./endpoints\";\nexport const getQAById = (id: any) => {\n  axios\n    .get(`${getQAByID}?id=${id}`)\n    .then(function (response) {\n      // handle success\n      console.log({ QA: response.data });\n      return response.data;\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .then(function () {\n      // always executed\n    });\n};\n\nexport const updateQA = (id: any, question: any, answer: any) => {\n    axios\n      .put(`${updateQA}?id=${id}`, {\n          question,\n          answer\n      })\n      .then(function (response) {\n        // handle success\n        console.log({ QA: response.data });\n        return response.data;\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n  export const getALLQA = () => {\n    axios\n      .get(`${getALLQA}`)\n      .then(function (response) {\n        // handle success\n        console.log({ QA: response.data });\n        return response.data;\n      })\n      .catch(function (error) {\n        // handle error\n        console.log({error});\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n  export const addQA = (id: any, question: any, answer: any) => {\n    axios\n      .post(`${addQA}?id=${id}`, {\n          question,\n          answer\n      })\n      .then(function (response) {\n        // handle success\n        console.log({ QA: response.data });\n        return response.data;\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n  export const deleteQA = (id: any) => {\n    axios\n      .delete(`${deleteQA}?id=${id}`)\n      .then(function (response) {\n        // handle success\n        console.log({ QA: response.data });\n        return response.data;\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };"]},"metadata":{},"sourceType":"module"}
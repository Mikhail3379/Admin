{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/AddQA/QA.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./QA.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QA() {\n  _s();\n\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n\n  const submitForm = event => {\n    event.preventDefault();\n    let body = {\n      id: uuidv4(),\n      question,\n      answer\n    }; // fetch(\"http://localhost:8000/app/addChatbot\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n    //   },\n    //   body: JSON.stringify(body),\n    // }).then((data) => {\n    //   console.info(data);\n    // });\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n\n    try {\n      fetch(\"http://localhost:9000/app/addQA\", requestOptions).then(response => response.json());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Chatbot Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        type: \"text\",\n        placeholder: \"Please enter your question\",\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Chatbot Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: answer,\n        onChange: e => setAnswer(e.target.value),\n        type: \"text\",\n        placeholder: \"Please enter your answer\",\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn1\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QA, \"dVijXm+eIaUVMus3afQ4nLRSQHQ=\");\n\n_c = QA;\nexport default QA;\n\nvar _c;\n\n$RefreshReg$(_c, \"QA\");","map":{"version":3,"sources":["/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/AddQA/QA.tsx"],"names":["React","useState","v4","uuidv4","QA","question","setQuestion","answer","setAnswer","submitForm","event","preventDefault","body","id","requestOptions","method","headers","JSON","stringify","fetch","then","response","json","error","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,UAAP;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AACA,SAASC,EAAT,GAAc;AAAA;;AACZ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,UAAU,GAAIC,KAAD,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAG;AACTC,MAAAA,EAAE,EAAEV,MAAM,EADD;AAETE,MAAAA,QAFS;AAGTE,MAAAA;AAHS,KAAX,CAFgC,CAOhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMO,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrBJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHe,KAAvB;;AAKA,QAAI;AACFO,MAAAA,KAAK,CAAC,iCAAD,EAAoCL,cAApC,CAAL,CACGM,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB;AAED,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GA9BD;;AAgCA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEd,UAAhB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,KAAK,EAAEJ,QADT;AAEE,QAAA,QAAQ,EAAGqB,CAAD,IAAOpB,WAAW,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,4BAJd;AAKE,QAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AACE,QAAA,KAAK,EAAErB,MADT;AAEE,QAAA,QAAQ,EAAGmB,CAAD,IAAOlB,SAAS,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF5B;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,0BAJd;AAKE,QAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,cAbF,eAoBE;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAjEQxB,E;;KAAAA,E;AAmET,eAAeA,EAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./QA.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nfunction QA() {\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n\n  const submitForm = (event:any) => {\n    event.preventDefault()\n    let body = {\n      id: uuidv4(),\n      question,\n      answer,\n    };\n    // fetch(\"http://localhost:8000/app/addChatbot\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n    //   },\n    //   body: JSON.stringify(body),\n    // }).then((data) => {\n    //   console.info(data);\n    // });\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body),\n    };\n    try {\n      fetch(\"http://localhost:9000/app/addQA\", requestOptions)\n        .then((response) => response.json())\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={submitForm}>\n        <label className=\"label\">Chatbot Question</label>\n        <br />\n        <input\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n          type=\"text\"\n          placeholder=\"Please enter your question\"\n          className=\"input\"\n        />\n        <br />\n        <label className=\"label\">Chatbot Answer</label>\n        <br />\n        <input\n          value={answer}\n          onChange={(e) => setAnswer(e.target.value)}\n          type=\"text\"\n          placeholder=\"Please enter your answer\"\n          className=\"input\"\n        />\n        <br />\n        <button type=\"submit\" className=\"btn1\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default QA;\n"]},"metadata":{},"sourceType":"module"}
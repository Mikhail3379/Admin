{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/QAList/QAList.tsx\";\nimport * as React from \"react\";\nimport \"./QAList.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QAList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.processFormSubmission = async e => {\n      e.preventDefault(); // updateQA(id, question, answer);\n\n      this.setState({\n        loading: true\n      });\n      axios.put(`http://localhost:9000/app/updateQA`).then(response => {\n        this.setState({\n          submitSuccess: true,\n          loading: false\n        });\n        setTimeout(() => {\n          this.props.history.push('/');\n        }, 1500);\n      });\n    };\n\n    this.setValues = values => {\n      this.setState({\n        values: { ...this.state.values,\n          ...values\n        }\n      });\n    };\n\n    this.handleInputChanges = e => {\n      e.preventDefault();\n      this.setValues({\n        [e.currentTarget.id]: e.currentTarget.value\n      });\n    };\n\n    this.state = {\n      id: \"\",\n      question: {},\n      answer: {},\n      values: [],\n      loading: false,\n      submitSuccess: false\n    };\n  }\n\n  componentDidMount() {\n    //getALLQA();\n    axios.get(`http://localhost:9000/app/allQA`).then(response => {\n      console.log({\n        response\n      });\n      this.setValues(response.data);\n    });\n  }\n\n  render() {\n    const {\n      submitSuccess,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.question && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" List of QA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 form-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Edit QA \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), submitSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-info\",\n              role: \"alert\",\n              children: [\"QA details has been edited successfully\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"create-post-form\",\n              onSubmit: this.processFormSubmission,\n              noValidate: true,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"question\",\n                  children: \" Questions \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"question\",\n                  defaultValue: this.state.question.id,\n                  onChange: e => this.handleInputChanges(e),\n                  name: \"question\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"answer\",\n                  children: \" Answers \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"answer\",\n                  defaultValue: this.state.answer.id,\n                  onChange: e => this.handleInputChanges(e),\n                  name: \"answer\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-4 pull-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  type: \"submit\",\n                  children: [\"Edit QA\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fa fa-circle-o-notch fa-spin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default QAList;\n\nfunction id(id, question, answer) {\n  throw new Error(\"Function not implemented.\");\n}\n\nfunction question(id, question, answer) {\n  throw new Error(\"Function not implemented.\");\n}\n\nfunction answer(id, question, answer) {\n  throw new Error(\"Function not implemented.\");\n}","map":{"version":3,"sources":["/Users/mikhailbakushev/Documents/Projects/Nova_chatbot_backoffice/frontend/src/components/QAList/QAList.tsx"],"names":["React","axios","QAList","Component","constructor","props","processFormSubmission","e","preventDefault","setState","loading","put","then","response","submitSuccess","setTimeout","history","push","setValues","values","state","handleInputChanges","currentTarget","id","value","question","answer","componentDidMount","get","console","log","data","render","Error"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport \"./QAList.css\";\nimport axios from \"axios\";\nimport { getQAById, updateQA } from \"../../lib/axios\";\nimport { getALLQA } from \"../../lib/axios\";\n\nexport interface IValues {\n  [key: string]: any;\n}\nexport interface IFormState {\n  id: string;\n  question: any;\n  answer: any;\n  values: IValues[];\n  submitSuccess: boolean;\n  loading: boolean;\n}\n\nclass QAList extends React.Component<any, any, IFormState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      id: \"\",\n      question: {},\n      answer: {},\n      values: [],\n      loading: false,\n      submitSuccess: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    //getALLQA();\n    axios.get(`http://localhost:9000/app/allQA`).then((response) => {\n        console.log({response})\n      this.setValues(response.data);\n    });\n  }\n\n  private processFormSubmission = async (\n    e: React.FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    e.preventDefault();\n\n    // updateQA(id, question, answer);\n    this.setState({ loading: true });\n    axios.put(`http://localhost:9000/app/updateQA`).then((response) => {\n        this.setState({ submitSuccess: true, loading: false })\n        setTimeout(() => {\n            this.props.history.push('/');\n        }, 1500)\n    })\n  };\n\n  private setValues = (values: IValues) => {\n    this.setState({ values: { ...this.state.values, ...values } });\n  };\n  private handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    this.setValues({ [e.currentTarget.id]: e.currentTarget.value });\n  };\n\n  public render() {\n    const { submitSuccess, loading } = this.state;\n    return (\n      <div className=\"App\">\n        {this.state.question && (\n          <div>\n            <h1> List of QA</h1>\n\n            <div>\n              <div className={\"col-md-12 form-wrapper\"}>\n                <h2> Edit QA </h2>\n                {submitSuccess && (\n                  <div className=\"alert alert-info\" role=\"alert\">\n                    QA details has been edited successfully{\" \"}\n                  </div>\n                )}\n                <form\n                  id={\"create-post-form\"}\n                  onSubmit={this.processFormSubmission}\n                  noValidate={true}\n                >\n                  <div className=\"form-group col-md-12\">\n                    <label htmlFor=\"question\"> Questions </label>\n                    <input\n                      type=\"text\"\n                      id=\"question\"\n                      defaultValue={this.state.question.id}\n                      onChange={(e) => this.handleInputChanges(e)}\n                      name=\"question\"\n                      className=\"form-control\"\n                     \n                    />\n                  </div>\n                  <div className=\"form-group col-md-12\">\n                    <label htmlFor=\"answer\"> Answers </label>\n                    <input\n                      type=\"text\"\n                      id=\"answer\"\n                      defaultValue={this.state.answer.id}\n                      onChange={(e) => this.handleInputChanges(e)}\n                      name=\"answer\"\n                      className=\"form-control\"\n                     \n                    />\n                  </div>\n\n                  <div className=\"form-group col-md-4 pull-right\">\n                    <button className=\"btn\" type=\"submit\">\n                      Edit QA{\" \"}\n                    </button>\n                    {loading && (\n                      <span className=\"fa fa-circle-o-notch fa-spin\" />\n                    )}\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default QAList;\nfunction id(id: any, question: any, answer: any) {\n  throw new Error(\"Function not implemented.\");\n}\n\nfunction question(\n  id: (id: any, question: any, answer: any) => void,\n  question: any,\n  answer: any\n) {\n  throw new Error(\"Function not implemented.\");\n}\n\nfunction answer(\n  id: (id: any, question: any, answer: any) => void,\n  question: (\n    id: (id: any, question: any, answer: any) => void,\n    question: any,\n    answer: any\n  ) => void,\n  answer: any\n) {\n  throw new Error(\"Function not implemented.\");\n}\n"]},"metadata":{},"sourceType":"module"}